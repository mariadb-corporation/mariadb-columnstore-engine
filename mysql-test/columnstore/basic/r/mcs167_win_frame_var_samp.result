DROP DATABASE IF EXISTS mcs167_db;
CREATE DATABASE mcs167_db;
USE mcs167_db;
CREATE TABLE t1 (a CHAR(1), b INT)ENGINE=Columnstore;
INSERT INTO t1 VALUES ('', NULL),('a', 12),('a', 13),('b', 14),('c', 15),('d', 16),('d', 17),('b', 18),('a', 19);
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	0.5000
b	14	1.0000
c	15	1.6667
d	16	2.5000
d	17	3.5000
b	18	4.6667
a	19	6.0000
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	6.0000
a	12	6.0000
a	13	4.6667
b	14	3.5000
c	15	2.5000
d	16	1.6667
d	17	1.0000
b	18	0.5000
a	19	NULL
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	0.5000
b	14	0.5000
c	15	0.5000
d	16	0.5000
d	17	0.5000
b	18	0.5000
a	19	0.5000
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	0.5000
a	13	1.0000
b	14	1.0000
c	15	1.0000
d	16	1.0000
d	17	1.0000
b	18	1.0000
a	19	0.5000
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	6.0000
a	12	6.0000
a	13	6.0000
b	14	4.6667
c	15	3.5000
d	16	2.5000
d	17	1.6667
b	18	1.0000
a	19	0.5000
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b DESC RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
a	19	NULL
b	18	0.5000
d	17	1.0000
d	16	1.6667
c	15	2.5000
b	14	3.5000
a	13	4.6667
a	12	6.0000
NULL	NULL	6.0000
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b DESC RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
a	19	6.0000
b	18	4.6667
d	17	3.5000
d	16	2.5000
c	15	1.6667
b	14	1.0000
a	13	0.5000
a	12	NULL
NULL	NULL	NULL
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b DESC ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
a	19	NULL
b	18	0.5000
d	17	0.5000
d	16	0.5000
c	15	0.5000
b	14	0.5000
a	13	0.5000
a	12	0.5000
NULL	NULL	NULL
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b DESC ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
a	19	0.5000
b	18	1.0000
d	17	1.0000
d	16	1.0000
c	15	1.0000
b	14	1.0000
a	13	1.0000
a	12	0.5000
NULL	NULL	NULL
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY b DESC ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
a	19	6.0000
b	18	6.0000
d	17	4.6667
d	16	3.5000
c	15	2.5000
b	14	1.6667
a	13	1.0000
a	12	0.5000
NULL	NULL	NULL
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY a ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	0.5000
a	19	14.3333
b	14	NULL
b	18	8.0000
c	15	NULL
d	16	NULL
d	17	0.5000
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY b ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	NULL
b	14	NULL
c	15	NULL
d	16	NULL
d	17	NULL
b	18	NULL
a	19	NULL
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY a ORDER BY b RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	14.3333
a	13	18.0000
a	19	NULL
b	14	8.0000
b	18	NULL
c	15	NULL
d	16	0.5000
d	17	NULL
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY b ORDER BY b RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	NULL
b	14	NULL
c	15	NULL
d	16	NULL
d	17	NULL
b	18	NULL
a	19	NULL
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY a ORDER BY b ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	0.5000
a	19	18.0000
b	14	NULL
b	18	8.0000
c	15	NULL
d	16	NULL
d	17	0.5000
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY b ORDER BY b ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	NULL
b	14	NULL
c	15	NULL
d	16	NULL
d	17	NULL
b	18	NULL
a	19	NULL
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY a ORDER BY b ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	0.5000
a	13	14.3333
a	19	18.0000
b	14	8.0000
b	18	8.0000
c	15	NULL
d	16	0.5000
d	17	0.5000
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY b ORDER BY b ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	NULL
b	14	NULL
c	15	NULL
d	16	NULL
d	17	NULL
b	18	NULL
a	19	NULL
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY a ORDER BY b ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	14.3333
a	13	14.3333
a	19	18.0000
b	14	8.0000
b	18	8.0000
c	15	NULL
d	16	0.5000
d	17	0.5000
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY b ORDER BY b ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) VAR_SAMP FROM t1;
a	b	VAR_SAMP
NULL	NULL	NULL
a	12	NULL
a	13	NULL
b	14	NULL
c	15	NULL
d	16	NULL
d	17	NULL
b	18	NULL
a	19	NULL
SELECT a, b, VAR_SAMP(b) OVER(PARTITION BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
ERROR HY000: RANGE-type frame requires ORDER BY clause with single sort key
SELECT a, b, VAR_SAMP(b) OVER(ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) VAR_SAMP FROM t1;
ERROR HY000: Numeric datatype is required for RANGE-type frame
DROP DATABASE mcs167_db;
