#
# Test cases for the TIMESTAMP datatype
#
DROP DATABASE IF EXISTS timestamp_test;
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a timestamp);
SET time_zone='-5:00';
INSERT INTO ctimestamp VALUES ('2019-01-01 01:02:03'), ('2019-05-05 01:01:01');
SET time_zone='+1:00';
SELECT a FROM ctimestamp ORDER BY a;
a
2019-01-01 07:02:03
2019-05-05 07:01:01
SET time_zone='-2:00';
SELECT a FROM ctimestamp ORDER BY a;
a
2019-01-01 04:02:03
2019-05-05 04:01:01
CREATE TABLE ctimestamp2 (a timestamp DEFAULT 0);
INSERT INTO ctimestamp2 SELECT * FROM ctimestamp;
SELECT a FROM ctimestamp2 ORDER BY a;
a
2019-01-01 04:02:03
2019-05-05 04:01:01
CREATE TABLE ctimestamp3 (a timestamp);
INSERT INTO ctimestamp3 VALUES (19940101), (940101),
(19940101010203), (940101010203), ('1994-01-01T01:02:03');
SELECT a FROM ctimestamp3 ORDER BY a;
a
1994-01-01 00:00:00
1994-01-01 00:00:00
1994-01-01 01:02:03
1994-01-01 01:02:03
1994-01-01 01:02:03
CREATE TABLE ctimestamp4 (a timestamp(6) default 0);
INSERT INTO ctimestamp4 VALUES (0), ('2019-01-01 01:01:01.123456');
SELECT a, microsecond(a) FROM ctimestamp4 ORDER BY a;
a	microsecond(a)
0000-00-00 00:00:00.000000	0
2019-01-01 01:01:01.123456	123456
DROP DATABASE IF EXISTS timestamp_test;
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a timestamp);
SET time_zone='+0:00';
INSERT INTO ctimestamp VALUES ('2019-01-02 00:02:03'),
('2019-01-02 01:02:03'), ('2019-01-02 10:11:12');
SET time_zone='+1:00';
SELECT a, a BETWEEN '2019-01-02 02:00:00' AND '2019-01-02 13:00:00'
FROM ctimestamp ORDER BY a;
a	a BETWEEN '2019-01-02 02:00:00' AND '2019-01-02 13:00:00'
2019-01-02 01:02:03	0
2019-01-02 02:02:03	1
2019-01-02 11:11:12	1
SELECT a, IF(a < '2019-01-02 02:00:00', 'yes', 'no'),
ADDTIME(a, '1:1:1'), STR_TO_DATE(a, '%Y-%m-%d %H:%i:%s'),
EXTRACT(DAY_HOUR FROM a), EXTRACT(MINUTE_SECOND FROM a),
TIME_FORMAT(a, '%H:\%i:\%s'), a RLIKE '02:03', IFNULL(NULL, a),
CASE a WHEN '2019-01-02 01:02:03' THEN 'found' WHEN '2019-01-02 11:11:12'
THEN 'found2' ELSE 'notfound' END, CHAR_LENGTH(a),
CAST(a AS UNSIGNED INT), CAST(a AS CHAR), CAST(a AS DATE),
TIME(CAST(a AS DATETIME)), TIME(COALESCE(NULL, a)), HEX(a),
NULLIF(a, '2019-01-02 01:02:03'), TIMEDIFF(a, '2019-01-01 01:02:03')
FROM ctimestamp ORDER BY a;
a	IF(a < '2019-01-02 02:00:00', 'yes', 'no')	ADDTIME(a, '1:1:1')	STR_TO_DATE(a, '%Y-%m-%d %H:%i:%s')	EXTRACT(DAY_HOUR FROM a)	EXTRACT(MINUTE_SECOND FROM a)	TIME_FORMAT(a, '%H:\%i:\%s')	a RLIKE '02:03'	IFNULL(NULL, a)	CASE a WHEN '2019-01-02 01:02:03' THEN 'found' WHEN '2019-01-02 11:11:12'
THEN 'found2' ELSE 'notfound' END	CHAR_LENGTH(a)	CAST(a AS UNSIGNED INT)	CAST(a AS CHAR)	CAST(a AS DATE)	TIME(CAST(a AS DATETIME))	TIME(COALESCE(NULL, a))	HEX(a)	NULLIF(a, '2019-01-02 01:02:03')	TIMEDIFF(a, '2019-01-01 01:02:03')
2019-01-02 01:02:03	yes	2019-01-02 02:03:04	2019-01-02 01:02:03	201	203	01:\02:\03	1	2019-01-02 01:02:03	found	19	20190102010203	2019-01-02 01:02:03	2019-01-02	01:02:03	01:02:03	323031392D30312D30322030313A30323A3033	NULL	24:00:00
2019-01-02 02:02:03	no	2019-01-02 03:03:04	2019-01-02 02:02:03	202	203	02:\02:\03	1	2019-01-02 02:02:03	notfound	19	20190102020203	2019-01-02 02:02:03	2019-01-02	02:02:03	02:02:03	323031392D30312D30322030323A30323A3033	2019-01-02 02:02:03	25:00:00
2019-01-02 11:11:12	no	2019-01-02 12:12:13	2019-01-02 11:11:12	211	1112	11:\11:\12	0	2019-01-02 11:11:12	found2	19	20190102111112	2019-01-02 11:11:12	2019-01-02	11:11:12	11:11:12	323031392D30312D30322031313A31313A3132	2019-01-02 11:11:12	34:09:09
INSERT INTO ctimestamp VALUES ('2020-01-03 12:12:12'),
('2020-05-06 12:12:12'), ('2020-10-28 12:12:12');
SELECT a, DAYNAME(a), DAYOFWEEK(a), DATE_FORMAT(a, '%W %M %Y'),
MONTHNAME(a), DATE(a), YEARWEEK(a), DAYOFYEAR(a), YEAR(a),
a + INTERVAL 1 DAY, TIMESTAMPDIFF(DAY, a, '2020-01-01'),
LAST_DAY(a), TRUNCATE(a, -2), a IN ('2019-01-02 01:02:03', a),
TO_DAYS(a), DAY(a), WEEK(a), WEEKDAY(a), GREATEST(a, '2020-07-01'),
MONTH(a), QUARTER(a), DATE_ADD(a, INTERVAL 1 SECOND)
FROM ctimestamp WHERE a > '2020-01-01' ORDER BY a;
a	DAYNAME(a)	DAYOFWEEK(a)	DATE_FORMAT(a, '%W %M %Y')	MONTHNAME(a)	DATE(a)	YEARWEEK(a)	DAYOFYEAR(a)	YEAR(a)	a + INTERVAL 1 DAY	TIMESTAMPDIFF(DAY, a, '2020-01-01')	LAST_DAY(a)	TRUNCATE(a, -2)	a IN ('2019-01-02 01:02:03', a)	TO_DAYS(a)	DAY(a)	WEEK(a)	WEEKDAY(a)	GREATEST(a, '2020-07-01')	MONTH(a)	QUARTER(a)	DATE_ADD(a, INTERVAL 1 SECOND)
2020-01-03 12:12:12	Friday	6	Friday January 2020	January	2020-01-03	201952	3	2020	2020-01-04 12:12:12	-2	2020-01-31	2020-01-03 12:12:12	1	737792	3	0	4	2020-07-01 00:00:00	1	1	2020-01-03 12:12:13
2020-05-06 12:12:12	Wednesday	4	Wednesday May 2020	May	2020-05-06	202018	127	2020	2020-05-07 12:12:12	-126	2020-05-31	2020-05-06 12:12:12	1	737916	6	18	2	2020-07-01 00:00:00	5	2	2020-05-06 12:12:13
2020-10-28 12:12:12	Wednesday	4	Wednesday October 2020	October	2020-10-28	202043	302	2020	2020-10-29 12:12:12	-301	2020-10-31	2020-10-28 12:12:12	1	738091	28	43	2	2020-10-28 12:12:12	10	4	2020-10-28 12:12:13
SELECT UNIX_TIMESTAMP(a), TIME_TO_SEC(a), CEIL(a),
CAST(LEAST(a, '2019-03-03 00:00:00') AS DATETIME),
ROUND(a), SECOND(a), MINUTE(a), HOUR(a), FLOOR(a)
FROM ctimestamp ORDER BY a;
UNIX_TIMESTAMP(a)	TIME_TO_SEC(a)	CEIL(a)	CAST(LEAST(a, '2019-03-03 00:00:00') AS DATETIME)	ROUND(a)	SECOND(a)	MINUTE(a)	HOUR(a)	FLOOR(a)
1546387323	3723	2019-01-02 01:02:03	2019-01-02 01:02:03	2019-01-02 01:02:03	3	2	1	2019-01-02 01:02:03
1546390923	7323	2019-01-02 02:02:03	2019-01-02 02:02:03	2019-01-02 02:02:03	3	2	2	2019-01-02 02:02:03
1546423872	40272	2019-01-02 11:11:12	2019-01-02 11:11:12	2019-01-02 11:11:12	12	11	11	2019-01-02 11:11:12
1578049932	43932	2020-01-03 12:12:12	2019-03-03 00:00:00	2020-01-03 12:12:12	12	12	12	2020-01-03 12:12:12
1588763532	43932	2020-05-06 12:12:12	2019-03-03 00:00:00	2020-05-06 12:12:12	12	12	12	2020-05-06 12:12:12
1603883532	43932	2020-10-28 12:12:12	2019-03-03 00:00:00	2020-10-28 12:12:12	12	12	12	2020-10-28 12:12:12
DROP DATABASE IF EXISTS timestamp_test;
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a timestamp, b int);
SET time_zone='+0:00';
INSERT INTO ctimestamp VALUES ('2019-01-03 12:12:12', 1),
('2019-01-04 12:12:12', 2), ('2019-01-03 12:12:12', 4),
('2019-01-03 12:12:12', 2), ('2019-01-04 12:12:12', 1);
SELECT a, b, SUM(b) over (PARTITION BY a ORDER BY a, b
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) c
FROM ctimestamp;
a	b	c
2019-01-03 12:12:12	1	1
2019-01-03 12:12:12	2	3
2019-01-03 12:12:12	4	7
2019-01-04 12:12:12	1	1
2019-01-04 12:12:12	2	3
SELECT a, b, MAX(a) over (PARTITION BY b ORDER BY a desc
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) c
FROM ctimestamp;
a	b	c
2019-01-04 12:12:12	1	2019-01-04 12:12:12
2019-01-03 12:12:12	1	2019-01-04 12:12:12
2019-01-04 12:12:12	2	2019-01-04 12:12:12
2019-01-03 12:12:12	2	2019-01-04 12:12:12
2019-01-03 12:12:12	4	2019-01-03 12:12:12
DROP DATABASE IF EXISTS timestamp_test;
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a int, b timestamp);
INSERT INTO ctimestamp VALUES (1, 20190101), (1, 20200202),
(2, 20190202), (2, 20200202), (2, 20190101);
SELECT b, count(*) FROM ctimestamp GROUP BY b ORDER BY b;
b	count(*)
2019-01-01 00:00:00	2
2019-02-02 00:00:00	1
2020-02-02 00:00:00	2
SELECT b, max(a), min(a) FROM ctimestamp GROUP BY b ORDER BY b;
b	max(a)	min(a)
2019-01-01 00:00:00	2	1
2019-02-02 00:00:00	2	2
2020-02-02 00:00:00	2	1
SELECT a, max(b), min(b) FROM ctimestamp GROUP BY a ORDER BY a;
a	max(b)	min(b)
1	2020-02-02 00:00:00	2019-01-01 00:00:00
2	2020-02-02 00:00:00	2019-01-01 00:00:00
DROP DATABASE timestamp_test;
