DROP DATABASE IF EXISTS mcs156_db;
CREATE DATABASE mcs156_db;
USE mcs156_db;
CREATE TABLE t1 (a CHAR(1), b INT)ENGINE=Columnstore;
INSERT INTO t1 VALUES ('', NULL),('a', 12),('a', 13),('b', 14),('c', 15),('d', 16),('d', 17),('b', 18),('a', 19);
SELECT a, b, COUNT(b) OVER(ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	2
b	14	3
c	15	4
d	16	5
d	17	6
b	18	7
a	19	8
SELECT a, b, COUNT(b) OVER(ORDER BY b RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	8
a	12	8
a	13	7
b	14	6
c	15	5
d	16	4
d	17	3
b	18	2
a	19	1
SELECT a, b, COUNT(b) OVER(ORDER BY b ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	2
b	14	2
c	15	2
d	16	2
d	17	2
b	18	2
a	19	2
SELECT a, b, COUNT(b) OVER(ORDER BY b ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	1
a	12	2
a	13	3
b	14	3
c	15	3
d	16	3
d	17	3
b	18	3
a	19	2
SELECT a, b, COUNT(b) OVER(ORDER BY b ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	8
a	12	8
a	13	8
b	14	7
c	15	6
d	16	5
d	17	4
b	18	3
a	19	2
SELECT a, b, COUNT(a) OVER(ORDER BY b DESC RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
a	19	1
b	18	2
d	17	3
d	16	4
c	15	5
b	14	6
a	13	7
a	12	8
NULL	NULL	8
SELECT a, b, COUNT(a) OVER(ORDER BY b DESC RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
a	19	8
b	18	7
d	17	6
d	16	5
c	15	4
b	14	3
a	13	2
a	12	1
NULL	NULL	0
SELECT a, b, COUNT(a) OVER(ORDER BY b DESC ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
a	19	1
b	18	2
d	17	2
d	16	2
c	15	2
b	14	2
a	13	2
a	12	2
NULL	NULL	1
SELECT a, b, COUNT(a) OVER(ORDER BY b DESC ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) count FROM t1;
a	b	count
a	19	2
b	18	3
d	17	3
d	16	3
c	15	3
b	14	3
a	13	3
a	12	2
NULL	NULL	1
SELECT a, b, COUNT(a) OVER(ORDER BY b DESC ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
a	19	8
b	18	8
d	17	7
d	16	6
c	15	5
b	14	4
a	13	3
a	12	2
NULL	NULL	1
SELECT a, b, COUNT(a) OVER(PARTITION BY a ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	2
a	19	3
b	14	1
b	18	2
c	15	1
d	16	1
d	17	2
SELECT a, b, COUNT(a) OVER(PARTITION BY b ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	1
b	14	1
c	15	1
d	16	1
d	17	1
b	18	1
a	19	1
SELECT a, b, COUNT(a) OVER(PARTITION BY a ORDER BY b RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	0
a	12	3
a	13	2
a	19	1
b	14	2
b	18	1
c	15	1
d	16	2
d	17	1
SELECT a, b, COUNT(a) OVER(PARTITION BY b ORDER BY b RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	1
b	14	1
c	15	1
d	16	1
d	17	1
b	18	1
a	19	1
SELECT a, b, COUNT(a) OVER(PARTITION BY a ORDER BY b ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	2
a	19	2
b	14	1
b	18	2
c	15	1
d	16	1
d	17	2
SELECT a, b, COUNT(a) OVER(PARTITION BY b ORDER BY b ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	1
b	14	1
c	15	1
d	16	1
d	17	1
b	18	1
a	19	1
SELECT a, b, COUNT(a) OVER(PARTITION BY a ORDER BY b ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	0
a	12	2
a	13	3
a	19	2
b	14	2
b	18	2
c	15	1
d	16	2
d	17	2
SELECT a, b, COUNT(a) OVER(PARTITION BY b ORDER BY b ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	1
b	14	1
c	15	1
d	16	1
d	17	1
b	18	1
a	19	1
SELECT a, b, COUNT(a) OVER(PARTITION BY a ORDER BY b ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	0
a	12	3
a	13	3
a	19	2
b	14	2
b	18	2
c	15	1
d	16	2
d	17	2
SELECT a, b, COUNT(a) OVER(PARTITION BY b ORDER BY b ROWS BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING) count FROM t1;
a	b	count
NULL	NULL	0
a	12	1
a	13	1
b	14	1
c	15	1
d	16	1
d	17	1
b	18	1
a	19	1
SELECT a, b, COUNT(b) OVER(PARTITION BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) count FROM t1;
ERROR HY000: RANGE-type frame requires ORDER BY clause with single sort key
SELECT a, b, COUNT(b) OVER(ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) count FROM t1;
ERROR HY000: Numeric datatype is required for RANGE-type frame
DROP DATABASE mcs156_db;
