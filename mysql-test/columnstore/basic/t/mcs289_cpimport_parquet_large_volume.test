if (!$MYSQL_TEST_ROOT){
    skip Should be run by root to execute cpimport;
}

-- source ../include/have_columnstore.inc

--disable_warnings
DROP DATABASE IF EXISTS mcs289_db;
--enable_warnings

CREATE DATABASE mcs289_db;
USE mcs289_db;
# Create table
# CREATE TABLE t1(col1 INT, col2 VARCHAR(20), col3 TIMESTAMP) ENGINE=Columnstore;
Create TABLE t1(
    col1 INT,
    col2 TIMESTAMP,
    col3 CHAR(6)
) ENGINE=Columnstore;

Create TABLE t2(
    col1 INT,
    col2 TIMESTAMP,
    col3 CHAR(6)
) ENGINE=Columnstore;

Create TABLE t3(
    col1 INT,
    col2 TIMESTAMP,
    col3 CHAR(6)
) ENGINE=Columnstore;

Create TABLE t4(
    col1 INT,
    col2 TIMESTAMP,
    col3 CHAR(6)
) ENGINE=Columnstore;

# Generate data
--exec mcs_parquet_gen -l


#Valid data and table
--exec $MCS_CPIMPORT mcs289_db t1 $MTR_SUITE_DIR/../std_data/1MRows.parquet >/dev/null
--exec $MCS_CPIMPORT mcs289_db t2 $MTR_SUITE_DIR/../std_data/10MRows.parquet >/dev/null
--exec $MCS_CPIMPORT mcs289_db t3 $MTR_SUITE_DIR/../std_data/50MRows.parquet >/dev/null
--exec $MCS_CPIMPORT mcs289_db t4 $MTR_SUITE_DIR/../std_data/100MRows.parquet >/dev/null

SELECT * FROM t1 ORDER BY col1 LIMIT 5;
SELECT COUNT(*) FROM t1;

SELECT * FROM t2 ORDER BY col1 LIMIT 5;
SELECT COUNT(*) FROM t2;

SELECT * FROM t3 ORDER BY col1 LIMIT 5;
SELECT COUNT(*) FROM t3;

SELECT * FROM t4 ORDER BY col1 LIMIT 5;
SELECT COUNT(*) FROM t4;

TRUNCATE t1;
TRUNCATE t2;
TRUNCATE t3;
TRUNCATE t4;

# Clean UP
--exec rm $MTR_SUITE_DIR/../std_data/1MRows.parquet
--exec rm $MTR_SUITE_DIR/../std_data/10MRows.parquet
--exec rm $MTR_SUITE_DIR/../std_data/50MRows.parquet
--exec rm $MTR_SUITE_DIR/../std_data/100MRows.parquet
DROP DATABASE mcs289_db;