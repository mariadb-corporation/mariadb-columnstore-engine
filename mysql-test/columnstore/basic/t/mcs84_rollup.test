#
# SELECT ... WITH ROLLUP                         #
# https://mariadb.com/kb/en/select-with-rollup/  #
#
# Author: Susil, susil.behera@mariadb.com        #  
#
-- source ../include/have_columnstore.inc

--disable_warnings
DROP DATABASE IF EXISTS mcs84_db;
--enable_warnings

CREATE DATABASE mcs84_db;
USE mcs84_db;

CREATE TABLE booksales ( 
  country CHAR(35), genre CHAR(15), year INT, sales INT)
  ENGINE=Columnstore;

INSERT INTO booksales VALUES
  ('Senegal','fiction',2014,12234), ('Senegal','fiction',2015,15647),
  ('Senegal','non-fiction',2014,64980), ('Senegal','non-fiction',2015,78901),
  ('Paraguay','fiction',2014,87970), ('Paraguay','fiction',2015,76940),
  ('Paraguay','non-fiction',2014,8760), ('Paraguay','non-fiction',2015,9030);

CREATE TABLE booksales2 (country2 CHAR(35), genre2 CHAR(15), year2 INT, sales2 INT) ENGINE=Columnstore;

INSERT INTO booksales2 VALUES
  ('Senegal','fiction',2014,12234), ('Senegal','fiction',2015,15647),
  ('Senegal','non-fiction',2014,64980), ('Senegal','non-fiction',2015,78901),
  ('Paraguay','fiction',2014,87970), ('Paraguay','fiction',2015,76940),
  ('Paraguay','non-fiction',2014,8760), ('Paraguay','non-fiction',2015,9030);

CREATE TABLE booksales3 (country3 CHAR(35), genre3 CHAR(15), year3 INT, sales3 INT);

INSERT INTO booksales3 VALUES
  ('Senegal','fiction',2014,12234), ('Senegal','fiction',2015,15647),
  ('Senegal','non-fiction',2014,64980), ('Senegal','non-fiction',2015,78901),
  ('Paraguay','fiction',2014,87970), ('Paraguay','fiction',2015,76940),
  ('Paraguay','non-fiction',2014,8760), ('Paraguay','non-fiction',2015,9030);

SELECT year, SUM(sales) FROM booksales GROUP BY year ORDER BY year;

# Negative. WITH ROLLUP cannot be used with ORDER BY. 
--error 1221
SELECT year, SUM(sales) FROM booksales GROUP BY year WITH ROLLUP ORDER BY year;

--sorted_result
SELECT year, sales, MAX(country) FROM booksales GROUP BY year, sales;
--sorted_result
SELECT year, MAX(country) FROM booksales GROUP BY year;
--sorted_result
SELECT year, sales, MAX(country) FROM booksales GROUP BY year, sales WITH ROLLUP;

--sorted_result
SELECT year, SUM(sales) FROM booksales GROUP BY year WITH ROLLUP;

--sorted_result
SELECT country, genre, SUM(sales) FROM booksales GROUP BY country, genre WITH ROLLUP;

--sorted_result
SELECT country, year, genre, SUM(sales) FROM booksales GROUP BY country, year, genre WITH ROLLUP;

--sorted_result
SELECT country, year, genre, SUM(sales) FROM booksales GROUP BY country, year, genre WITH ROLLUP limit 4;

--sorted_result
SELECT country, year, genre, SUM(sales) FROM booksales GROUP BY country, year DESC, genre WITH ROLLUP;

--sorted_result
select country, year2, sum(sales2) from booksales b1 join booksales2 b2 on b1.sales=b2.sales2 group by country,year2 WITH ROLLUP;

--sorted_result
select country, year3, sum(sales3) from booksales b1 join booksales3 b3 on b1.sales=b3.sales3 group by country,year3 WITH ROLLUP;

--sorted_result
select country, year, sum(sales) from booksales where country in (select max(country) from booksales) group by country,year WITH ROLLUP;

--sorted_result
select country, year, sum(sales) from booksales where country in (select max(country2) from booksales2) group by country,year WITH ROLLUP;

--sorted_result
SELECT country, year, genre, SUM(sales) FROM booksales GROUP BY country, year, genre WITH ROLLUP UNION SELECT country2, year2, genre2, SUM(sales2) FROM booksales2 GROUP BY country2,year2,genre2 WITH ROLLUP;

--sorted_result
SELECT country, year, genre, SUM(sales) FROM booksales GROUP BY country, year, genre WITH ROLLUP UNION all SELECT country3, year3, genre3, SUM(sales3) FROM booksales3 GROUP BY country3,year3,genre3 WITH ROLLUP;

--sorted_result
select * from (SELECT country, year, genre, sales FROM booksales UNION all SELECT country2, year2, genre2, sales2 FROM booksales2) t1 GROUP BY country,year,genre WITH ROLLUP;

--sorted_result
select country,year,genre,sum(sales) from (SELECT country, year, genre, sales FROM booksales UNION all SELECT country3, year3, genre3, sales3 FROM booksales3) t1 GROUP BY country,year,genre WITH ROLLUP;

CREATE TABLE three_cols ( key1 INTEGER, key2 INTEGER, value DECIMAL(38)) ENGINE=COLUMNSTORE;

INSERT INTO three_cols(key1, key2, value) VALUES
  (NULL, NULL, NULL)
, (NULL, NULL,    1)
, (NULL,    1,    2)
, (   1,    1,    3)
, (   1,    2,    4)
, (   1,    2,    5)
, (   2,    3,    6)
, (   2,    3,    7);

--sorted_result
SELECT key1, key2, SUM(value), AVG(value), MIN(value), MAX(value), COUNT(value), COUNT(*) FROM three_cols GROUP BY key1, key2 WITH ROLLUP;

--error 1815
SELECT key1, key2, GROUP_CONCAT(value) FROM three_cols GROUP BY key1, key2 WITH ROLLUP;
--error 1815
SELECT key1, key2, JSON_ARRAYAGG(value) FROM three_cols GROUP BY key1, key2 WITH ROLLUP;

--error 1815
SELECT 100, SUM(value) FROM three_cols GROUP BY 1 WITH ROLLUP;

# Clean up
DROP DATABASE IF EXISTS mcs84_db;
